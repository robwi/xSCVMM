param(    [Parameter(Mandatory = $true)]    [System.String]    $ComputerName)Configuration SCVMMLogicalNetworkTest{    Import-DscResource -ModuleName xSCVMM    node $ComputerName    {        # Logical Network configuration examples                xSCVMMLogicalNetwork LN_Management        {            Ensure                       = 'Present'            Name                         = 'Management'            Description                  = 'Management Logical Network'            NetworkType                  = 'Single'            EnableNetworkVirtualization  = $true        }        xSCVMMLogicalNetwork LN_Test_Remove        {            Ensure                       = 'Absent'            Name                         = 'Test-Remove'        }        xSCVMMLogicalNetwork LN_VLAN_Based        {            Ensure                       = 'Present'            Name                         = 'VLAN-Based-Test'            Description                  = $null            NetworkType                  = 'VLAN'            EnableNetworkVirtualization  = $null        }        xSCVMMLogicalNetwork LN_PVLAN_Based        {            Ensure                       = 'Present'            Name                         = 'PVLAN-Based-Test'            Description                  = $null            NetworkType                  = 'PVLAN'            EnableNetworkVirtualization  = $null        }                # Logical Network Definition configuration examples                xSCVMMLogicalNetworkDefinition LND_Management        {            DependsOn                    = '[xSCVMMLogicalNetwork]LN_Management'            Ensure                       = 'Present'            Name                         = 'Management_0'            LogicalNetwork               = 'Management'            HostGroups                   = @("All Hosts")            SubnetVlan                   = @("10.10.12.0/24-0-0")            StrictConfiguration          = $true        }        xSCVMMLogicalNetworkDefinition LND_VLAN_Based_Remove        {            DependsOn                    = '[xSCVMMLogicalNetwork]LN_VLAN_Based'            Ensure                       = 'Absent'            Name                         = 'VLAN-Based-Test_SITE0'            LogicalNetwork               = 'VLAN-Based-Test'            HostGroups                   = ""            SubnetVlan                   = ""            StrictConfiguration          = $false        }        xSCVMMLogicalNetworkDefinition LND_VLAN_Based        {            DependsOn                    = '[xSCVMMLogicalNetwork]LN_VLAN_Based'            Ensure                       = 'Present'            Name                         = 'VLAN-Based-Test_0'            LogicalNetwork               = 'VLAN-Based-Test'            HostGroups                   = @("All Hosts")            SubnetVlan                   = @("10.88.0.0/24-88-0")            StrictConfiguration          = $true        }        xSCVMMLogicalNetworkDefinition LND_VLAN_Based_1        {            DependsOn                    = '[xSCVMMLogicalNetwork]LN_VLAN_Based'            Ensure                       = 'Present'            Name                         = 'VLAN-Based-Test_1'            LogicalNetwork               = 'VLAN-Based-Test'            HostGroups                   = @("All Hosts")            SubnetVlan                   = @("10.99.0.0/24-99-0")            StrictConfiguration          = $false        }        xSCVMMLogicalNetworkDefinition LND_PVLAN_Based        {            DependsOn                    = '[xSCVMMLogicalNetwork]LN_PVLAN_Based'            Ensure                       = 'Present'            Name                         = 'PVLAN-Based-Test_0'            LogicalNetwork               = 'PVLAN-Based-Test'            HostGroups                   = @("All Hosts")            SubnetVlan                   = @("10.180.20.0/24-0-1")            StrictConfiguration          = $true        }    }} $ConfigurationData = ` @{    AllNodes = `    @(        @{            NodeName = "*"            PSDscAllowPlainTextPassword = $true        }        @{            NodeName = $ComputerName        }    )}$MOFpath = "$env:SystemDrive\Test\MOF"SCVMMLogicalNetworkTest -OutputPath $MOFpath -ConfigurationData $ConfigurationDataStart-DscConfiguration -ComputerName $ComputerName -Wait -Force -Verbose -Debug -Path $MOFpath